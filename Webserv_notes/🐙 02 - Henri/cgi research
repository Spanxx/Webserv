The CGI standard defines many environment variables you might want to set, like:

REQUEST_METHOD: "GET" or "POST"

QUERY_STRING: the part after ? in URL

CONTENT_LENGTH: length of request body (for POST)

SCRIPT_NAME: the script path

SERVER_PROTOCOL: e.g. "HTTP/1.1"

SERVER_NAME: your server name or IP

SERVER_PORT: port number

REMOTE_ADDR: client IP address

HTTP_ headers: incoming HTTP headers, e.g. HTTP_USER_AGENT




A query string is the part of a URL that comes after the question mark (?) and contains key-value pairs used to pass data to the server.

Example:
URL:

http://example.com/search?q=chatgpt&lang=en
The query string here is:


q=chatgpt&lang=en
It encodes parameters:

q with value "chatgpt"

lang with value "en"

Purpose:
Itâ€™s used to send extra information to the server, often for searches, filters, or any dynamic data.

The server can parse this string to get values and respond accordingly.

In CGI:
The server passes this query string to the CGI script via the environment variable QUERY_STRING.

The CGI script then uses it to customize its output.

Summary:
Query string = URL parameters after ?

Format: key=value&key2=value2&...

Used to pass info in GET requests



METHODS:

Yes, you define what method to use â€” the browser (or JavaScript) decides whether it's a GET, POST, etc., based on:

HTML element types (<form>, <a>, etc.)

Attributes (method="post")

JavaScript behavior (fetch, XMLHttpRequest, etc.)

ðŸ§° Here's how it works:
âœ… 1. GET Request (default)
You get a GET request when the browser wants to fetch something without sending a body.

Triggered by:

Clicking a <a href="/page">link</a>

Submitting a form like:

html
Copy code
<form action="/search">
    <input name="q">
    <button>Search</button>
</form>
This sends:

sql
Copy code
GET /search?q=value
âœ… 2. POST Request
You get a POST when the browser sends data in the body (e.g. form submission).

Triggered by:

html
Copy code
<form action="/submit" method="post">
    <input name="username">
    <button type="submit">Send</button>
</form>
This will send:

makefile
Copy code
POST /submit
Content-Type: application/x-www-form-urlencoded
Content-Length: ...

username=someuser
âœ… 3. JavaScript-Defined Requests
In JavaScript, you can explicitly create requests of any type:

js
Copy code
fetch("/api/data", {
    method: "POST",
    headers: {
        "Content-Type": "application/json"
    },
    body: JSON.stringify({ user: "henriette" })
});
This gives you total control over:

Method (GET, POST, PUT, DELETEâ€¦)

Headers

Body
